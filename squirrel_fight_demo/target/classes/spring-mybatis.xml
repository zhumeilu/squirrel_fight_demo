<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- base dataSource -->
	<!--<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
		<!--init-method="init" destroy-method="close">-->
		<!--<property name="url" value="${db.master.url}" />-->
		<!--<property name="username" value="${db.master.user}" />-->
		<!--<property name="password" value="${db.master.password}" />-->

		<!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
		<!--&lt;!&ndash; <property name="filters" value="mergeStat,wall,log4j2" /> &ndash;&gt;-->
		<!--<property name="initialSize" value="5" />-->
		<!--<property name="maxActive" value="100" />-->
		<!--<property name="minIdle" value="10" />-->
		<!--<property name="maxWait" value="60000" />-->
		<!--<property name="validationQuery" value="SELECT 'x'" />-->
		<!--<property name="testOnBorrow" value="true" />-->
		<!--<property name="testOnReturn" value="true" />-->
		<!--<property name="testWhileIdle" value="true" />-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->
		<!--<property name="minEvictableIdleTimeMillis" value="300000" />-->
		<!--<property name="removeAbandoned" value="true" />-->
		<!--<property name="removeAbandonedTimeout" value="1800" />-->
		<!--<property name="logAbandoned" value="true" />-->
	<!--</bean>-->

	<!-- Spring整合Mybatis -->
	<bean id="sqlSessionFactory"
		class="com.baomidou.mybatisplus.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描Mapping.xml文件 -->
		<property name="mapperLocations">
			<list>
				<value>
					classpath*:/mapper/*.xml
				</value>

			</list>
		</property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<property name="typeAliasesPackage" value="com.lemeng.param.model" />
		<property name="plugins">
			<list>
				<!-- 分页插件配置 -->
				<bean id="paginationInterceptor"
					class="com.baomidou.mybatisplus.plugins.PaginationInterceptor">
					<property name="dialectType" value="mysql" />
				</bean>
			</list>
		</property>
		<!-- 全局配置注入 -->
		<property name="globalConfig" ref="globalConfig" />
	</bean>

	<bean id="globalConfig" class="com.baomidou.mybatisplus.entity.GlobalConfiguration">
		<!-- AUTO->`0`("数据库ID自增") INPUT->`1`(用户输入ID") ID_WORKER->`2`("全局唯一ID") 
			UUID->`3`("全局唯一ID") -->
		<property name="idType" value="2" />
		<!-- MYSQL->`mysql` ORACLE->`oracle` DB2->`db2` H2->`h2` HSQL->`hsql` SQLITE->`sqlite` 
			POSTGRE->`postgresql` SQLSERVER2005->`sqlserver2005` SQLSERVER->`sqlserver` -->
		<!-- Oracle需要添加该项 -->
		<!-- <property name="dbType" value="oracle" /> -->
		<!-- 全局表为下划线命名设置 true -->
		<!-- <property name="dbColumnUnderline" value="true" /> -->
		<!-- <property name="metaObjectHandler">
			<bean class="com.baomidou.springmvc.common.MyMetaObjectHandler" />
		</property> -->
	</bean>

	<!-- MyBatis 动态实现 -->
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 对Dao 接口动态实现，需要知道接口在哪 -->
		<property name="basePackage" value="com.lemeng.param.mapper" />
	</bean>

	<!-- 事务管理 -->
	<!--<bean id="transactionManager"-->
		<!--class="org.springframework.jdbc.datasource.DataSourceTransactionManager">-->
		<!--<property name="dataSource" ref="dataSource"></property>-->
	<!--</bean>-->

	<!--<tx:annotation-driven transaction-manager="transactionManager" />-->

	<!-- 事务管理 属性 -->
	<!-- <tx:advice id="transactionAdvice" transaction-manager="transactionManager"> 
		<tx:attributes> <tx:method name="select*" propagation="REQUIRED" read-only="true" 
		/> <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" 
		/> <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" 
		/> <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" 
		/> <tx:method name="*" propagation="REQUIRED" /> </tx:attributes> </tx:advice> -->

	<!-- 配置切面 -->
	<!-- <aop:config> <aop:advisor advice-ref="transactionAdvice" pointcut="execution(* 
		com.lemeng.service..*.*(..))" /> </aop:config> -->


	<!--<bean id="httpClientFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">-->
		<!--<property name="connectTimeout"  value="30000"/>-->
		<!--<property name="readTimeout"  value="30000"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash;RestTemplate&ndash;&gt;-->
	<!--<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">-->
		<!--<constructor-arg ref="httpClientFactory"/>-->
	<!--</bean>-->
</beans>